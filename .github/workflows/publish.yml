name: "publish"

on:
  push:
    branches: 
      - release

jobs:
  publish:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ''
    runs-on: ${{matrix.platform}}
    steps:
      - uses: actions/checkout@v4
      
      - name: setup deno
        uses: denoland/setup-deno@v2.0.2

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: deno install

      - name: Setup FFmpeg
        id: setup-ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3

      - name: (Windows) Copy the FFmpeg binaries
        if: matrix.platform == 'windows-latest'
        shell: bash
        run: |
          mkdir -p src-tauri/binaries
          ls "${{ steps.setup-ffmpeg.outputs.ffmpeg-path }}"
          echo "FFmpeg path: ${{ steps.setup-ffmpeg.outputs.ffmpeg-path }}"
          cp "${{ steps.setup-ffmpeg.outputs.ffmpeg-path }}/ffmpeg.exe" src-tauri/binaries/ffmpeg-x86_64-pc-windows-msvc.exe
          cp "${{ steps.setup-ffmpeg.outputs.ffmpeg-path }}/ffprobe.exe" src-tauri/binaries/ffprobe-x86_64-pc-windows-msvc.exe
          ls src-tauri/binaries/
      
      - uses: tauri-apps/tauri-action@v0
        id: app-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tauriScript: deno task tauri
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.app-build.outputs.appVersion }}
          repository: jaym-01/snipr-release
          files: |
            find D:/a/snipr/snipr/src-tauri/target/release/bundle -type f
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE }}

